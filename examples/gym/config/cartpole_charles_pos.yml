experiment: Cartpole
new_model: True
timestamp: True
experiment_config:
  agent: "RGRN"
  agent_kwargs:
    num_hidden: 4
    num_layers: 1
  world_kwargs:
    n_episodes: 8
    log_fields: [ "reward", "done", "observation"]  # need to log the observation for the position condition
es: CHARLES
conditions:
#  fitness_condition:                 # generate offspring conditional to fitness
#    scale: 500                       # normalize the fitness by this value
#    greedy: true                     # use greedy or Fisher-type sampling
  position_condition:
    target: 0.5
    horizon: 50
    agg_horizon: mean
    agg_episode: mean
generations: 100
es_config:
  popsize: 128
  is_genetic_algorithm: True
  selection_pressure: 8.0            # selection pressure for roulette wheel selection
  adaptive_selection_pressure: True  # whether to adapt the selection pressure
  elite_ratio: 0.25                  # ratio of the population to keep as elite. If crossover is used, an additional copy of the elite solutions might be added to the population if `improvement_steps` is defined.
  crossover_ratio: 0.15              # ratio of the population to perform crossover (if genetic algorithm, otherwise ignored)
  mutation_rate: 0.05                # mutation rate after crossover and sampling
  unbiased_mutation_ratio: 0.25      # ratio of the population to perform unbiased mutation (if genetic algorithm, otherwise ignored)
  readaptation: 5                    # whether to use mutation adaptation (denoising steps) or not. Only valid for `HADES` and `CHARLES` evolutionary strategies.
  forget_best: Ture                  # whether to forget the best solution, or keep the elites for the next generation
  weight_decay: 0.001                # L2 weight decay for the parameters of the evolutionary strategy (NOT of the diffusion model)
  diff_optim: "Adam"                 # DM: optimizer for training the diffusion model
  diff_lr: 0.003                     # DM: learning rate for training the diffusion model
  diff_weight_decay: 0.00001         # DM: weight decay for training the diffusion model
  diff_batch_size: 256               # DM: batch size for training the diffusion model
  diff_max_epoch: 1000               # DM: number of training steps for the diffusion model at each generation
  diff_continuous_training: False    # DM: continuous training, or retrain diffusion model at each generation
  buffer_size:
    max_size: 0
    pop_type: quality  # diversity
diff: DDIM
diff_config:
  num_steps: 100
  noise_level: 0.15
  diff_range: 10
  sample_uniform: False
  autoscaling: False
nn: MLP
nn_config:
  num_hidden: 128
  num_layers: 6
  activation: ELU
  batch_norm: True
